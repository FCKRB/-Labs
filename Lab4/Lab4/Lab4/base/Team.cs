using System;
using System.Collections.Generic;

namespace Lab4
{
	class Team : INameAndCopy
	{
		private const string DEFAULT_ORGANIZATION_NAME = "No organization name";
		private const int DEFAULT_REGISTRATION_NUMBER = 1;

		protected string organizationName;
		protected int registrationNumber;

		public Team()
		{
			organizationName = DEFAULT_ORGANIZATION_NAME;
			registrationNumber = DEFAULT_REGISTRATION_NUMBER;
		}

		public Team(string organizationName, int registrationNumber)
		{
			OrganizationName = organizationName;
			RegistrationNumber = registrationNumber;
		}

		public string OrganizationName
		{
			get => organizationName;
			set
			{
				if (value.Length == 0)
					throw new ArgumentException("zero organization name length");
				organizationName = value;
			}
		}

		public int RegistrationNumber
		{
			get => registrationNumber;
			set
			{
				if (value <= 0)
					throw new ArgumentException("registration number must be positive");
				registrationNumber = value;
			}
		}

		public virtual string Name
		{
			get => OrganizationName;
			set => OrganizationName = value;
		}

		public virtual object DeepCopy()
		{
			return new Team(organizationName, registrationNumber);
		}

		public static bool operator==(Team lhs, Team rhs)
		{
			return Equals(lhs, rhs);
		}

		public static bool operator!=(Team lhs, Team rhs)
		{
			return !Equals(lhs, rhs);
		}

		public override string ToString()
		{
			return $"{organizationName} [№{registrationNumber}]";
		}

		public bool Equals(Team team)
		{
			if (team == null)
				return false;
			if (ReferenceEquals(this, team))
				return true;

			return organizationName == team.organizationName &&
				   registrationNumber == team.registrationNumber;
		}

		public override bool Equals(object obj)
		{
			return Equals(obj as Team);
		}

		//Generated by Visual Studio
		public override int GetHashCode()
		{
			int hashCode = 290281410;
			hashCode = hashCode * -1521134295 + EqualityComparer<string>.Default.GetHashCode(organizationName);
			hashCode = hashCode * -1521134295 + registrationNumber.GetHashCode();
			return hashCode;
		}
	}
}
